<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>万物天空</title>
  
  
  <link href="https://www.loveasd.com/atom.xml" rel="self"/>
  
  <link href="https://www.loveasd.com/"/>
  <updated>2024-05-15T03:20:55.197Z</updated>
  <id>https://www.loveasd.com/</id>
  
  <author>
    <name>啊乐</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>分布式事务2pc和tcc的理解</title>
    <link href="https://www.loveasd.com/p/6c1e1438.html"/>
    <id>https://www.loveasd.com/p/6c1e1438.html</id>
    <published>2024-05-10T08:00:00.000Z</published>
    <updated>2024-05-15T03:20:55.197Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>转载自下面的文章，很容易理解，先保留一下，后面再继续完善<br><a href="https://www.upyun.com/opentalk/332.html">https://www.upyun.com/opentalk/332.html</a></p><h4 id="事务模式-两阶段提交-2PC"><a href="#事务模式-两阶段提交-2PC" class="headerlink" title="事务模式 -两阶段提交(2PC)"></a>事务模式 -两阶段提交(2PC)</h4><p>事物模式的代表就是两阶段提交，它的含义就是每个服务有自己的子事务，服务之间其实也是通过分布式事务来保障事务的一致性。</p><p>所以它在第一阶段的时候，这个协调器会发一个propose的请求给三个服务，如果每个服务都可以接受接下来的事务请求，它就会回复yes或者是no。回复之后就会到第二个阶段，如果前面三个服务回复的都是一个yes，那协调器就会发送commit这个请求，去执行这三个服务的事务操作，否则就会发送一个abort请求。执行完成之后，三个服务会回来一个ack，表示这个事务已经结束，或者是已经取消。</p><p>优点：有事务的原子性，因为在每次做事务操作的时候，都会锁定资源，所以所有进入协调器的请求，其实都是一个线性的请求，它不能去同步所有的事务。</p><p>缺点：它是一个阻塞式的模式，它需要锁定资源，它的复杂度也会相对比较高，比较难扩展。</p><h4 id="预约模式-TCC-Try-Confirm-Cancel"><a href="#预约模式-TCC-Try-Confirm-Cancel" class="headerlink" title="预约模式 -TCC(Try-Confirm&#x2F;Cancel)"></a>预约模式 -TCC(Try-Confirm&#x2F;Cancel)</h4><p>预约模式比较典型的叫Try-Confirm&#x2F;Cancel，缩写就是TCC。它也是一个两阶段的模式。第一个阶段它会发一个try的请求给三个服务，如果三个服务可以执行，它们就会回复yes，不能回复no，这和两阶段<a href="../20240312/%EF%BF%BD%EF%BF%BD%EF%BF%BD%D4%B9%D9%A3%EF%BF%BD%EF%BF%BD%EF%BF%BD%C3%B4%EF%BF%BD%EF%BF%BD%EF%BF%BD%D2%BB%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BD%C5%B1%EF%BF%BD%EF%BF%BD%EF%BF%BD.md">面试官：怎么设计一个部门表？.md</a>提交是一致的。不一样的地方是它不会锁定资源。所以在A处理完它的子事务，B可能还没有处理完它的子事务的时候，A可以接受其他的请求。在第二阶段，像两阶段提交一样，协调器会根据第一阶段ABC的返回结果去发送Confirm或者Cancel，这样的请求，最后ABC会返回ack。</p><p>优点：在try阶段如果失败，服务会回复至原状，什么意思呢？比如说要发一个会议邀请，如果用TCC的模式，第一阶段会先发一个询问的请求给所有的与会人员，询问是否可以在这一个时间点来参会，如果所有的参会人员都回答yes，第二步就会发送一个确认请求，实际的一个会议邀请，如果有任何一个人员不能参加，就会发送一个Cancel，取消这个会议。</p><p>缺点：</p><ol><li>它不是原子操作，它可以并行处理好多的分布式的事务，然后它在Confirm这个阶段，只能重试，如果有一个服务失败的话，只能重试，直到成功，或者是采取回退措施，需要人工去做干预。</li><li>它需要一个额外的try流程，服务需要提供额外的try的结构，也就需要提供额外的reserved的状态。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;转载自下面的文章，很容易理解，先保留一下，后面再继续完善&lt;br&gt;&lt;a href=&quot;https://www.upyun.com/opental</summary>
      
    
    
    
    <category term="开发日志" scheme="https://www.loveasd.com/categories/%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/"/>
    
    
    <category term="分布式事务" scheme="https://www.loveasd.com/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>itextpdf+thymeleaf实现html转pdf</title>
    <link href="https://www.loveasd.com/p/ac987054.html"/>
    <id>https://www.loveasd.com/p/ac987054.html</id>
    <published>2024-05-10T08:00:00.000Z</published>
    <updated>2024-05-15T03:20:57.942Z</updated>
    
    <content type="html"><![CDATA[<h2 id="业务需求"><a href="#业务需求" class="headerlink" title="业务需求"></a>业务需求</h2><p>项目需要用到导出pdf格式的列表，正常情况下是导出excel表格的，但是产品要求要导出pdf，组长叫我尝试一下itextpdf和thymeleaf。<br>捣鼓了几天研究出来了，但是还没有具体运用上线。</p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p>最终效果如下图<br><a class="simple-lightbox" href="https://loveasd-oss.s3.us-east-005.backblazeb2.com/loveasd-oss/2024/05/pdf2html-1.png"><img   src="/images/loading.svg" data-src="https://loveasd-oss.s3.us-east-005.backblazeb2.com/loveasd-oss/2024/05/pdf2html-1.png"  alt="效果图" lazyload></a></p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><h3 id="POM依赖"><a href="#POM依赖" class="headerlink" title="POM依赖"></a>POM依赖</h3><p>先导入相关的pom依赖</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- itext7html转pdf  --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.itextpdf&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;html2pdf&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">3.0</span><span class="number">.2</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 中文字体支持 --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.itextpdf&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;font-asian&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">7.1</span><span class="number">.13</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--freemarker模板--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.freemarker&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;freemarker&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;cn.hutool&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;hutool-all&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">5.8</span><span class="number">.16</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="Handler"><a href="#Handler" class="headerlink" title="Handler"></a>Handler</h3><p>这里主要是加一些适配器，比如页眉、页码、水印等</p><h4 id="页眉相关"><a href="#页眉相关" class="headerlink" title="页眉相关"></a>页眉相关</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HeaderH</span> <span class="keyword">implements</span> <span class="title class_">IEventHandler</span> &#123;</span><br><span class="line">    String header;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">HeaderH</span><span class="params">(String header)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.header = header;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleEvent</span><span class="params">(Event event)</span> &#123;</span><br><span class="line">        <span class="type">PdfDocumentEvent</span> <span class="variable">docEvent</span> <span class="operator">=</span> (PdfDocumentEvent) event;</span><br><span class="line">        <span class="type">PdfDocument</span> <span class="variable">pdf</span> <span class="operator">=</span> docEvent.getDocument();</span><br><span class="line">        <span class="type">PdfPage</span> <span class="variable">page</span> <span class="operator">=</span> docEvent.getPage();</span><br><span class="line">        <span class="keyword">if</span> (pdf.getPageNumber(page) == <span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line">        <span class="type">Rectangle</span> <span class="variable">pageSize</span> <span class="operator">=</span> page.getPageSize();</span><br><span class="line">        <span class="type">PdfCanvas</span> <span class="variable">pdfCanvas</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PdfCanvas</span>(</span><br><span class="line">            page.getLastContentStream(), page.getResources(), pdf);</span><br><span class="line">        <span class="type">Canvas</span> <span class="variable">canvas</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Canvas</span>(pdfCanvas, pdf, pageSize);</span><br><span class="line">        canvas.showTextAligned(header,</span><br><span class="line">            pageSize.getWidth() / <span class="number">2</span>,</span><br><span class="line">            pageSize.getTop() - <span class="number">30</span>, TextAlignment.CENTER);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="页码"><a href="#页码" class="headerlink" title="页码"></a>页码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PageXofY</span> <span class="keyword">implements</span> <span class="title class_">IEventHandler</span> &#123;</span><br><span class="line">    <span class="keyword">protected</span> PdfFormXObject placeholder;</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">int</span> totalPageCount;</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">float</span> <span class="variable">side</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">float</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">750</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">float</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">25</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">float</span> <span class="variable">space</span> <span class="operator">=</span> <span class="number">4.5f</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">float</span> <span class="variable">descent</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">PageXofY</span><span class="params">(PdfDocument pdf, <span class="type">int</span> totalPageCount)</span> &#123;</span><br><span class="line">        placeholder =</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">PdfFormXObject</span>(<span class="keyword">new</span> <span class="title class_">Rectangle</span>(<span class="number">0</span>, <span class="number">0</span>, side, side));</span><br><span class="line">        <span class="built_in">this</span>.totalPageCount = totalPageCount;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleEvent</span><span class="params">(Event event)</span> &#123;</span><br><span class="line">        <span class="type">PdfDocumentEvent</span> <span class="variable">docEvent</span> <span class="operator">=</span> (PdfDocumentEvent) event;</span><br><span class="line">        <span class="type">PdfDocument</span> <span class="variable">pdf</span> <span class="operator">=</span> docEvent.getDocument();</span><br><span class="line">        <span class="type">PdfPage</span> <span class="variable">page</span> <span class="operator">=</span> docEvent.getPage();</span><br><span class="line">        <span class="type">int</span> <span class="variable">pageNumber</span> <span class="operator">=</span> pdf.getPageNumber(page);</span><br><span class="line">        <span class="type">Rectangle</span> <span class="variable">pageSize</span> <span class="operator">=</span> page.getPageSize();</span><br><span class="line">        <span class="type">PdfCanvas</span> <span class="variable">pdfCanvas</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PdfCanvas</span>(</span><br><span class="line">                page.getLastContentStream(), page.getResources(), pdf);</span><br><span class="line">        <span class="type">Canvas</span> <span class="variable">canvas</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Canvas</span>(pdfCanvas, pdf, pageSize);</span><br><span class="line">        <span class="type">Paragraph</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Paragraph</span>()</span><br><span class="line">                .add(<span class="string">&quot;Page&quot;</span>)</span><br><span class="line">                .add(String.valueOf(StrPool.C_SPACE))</span><br><span class="line">                .add(String.valueOf(pageNumber))</span><br><span class="line">                .add(String.valueOf(StrPool.C_SPACE))</span><br><span class="line">                .add(<span class="string">&quot;of&quot;</span>)</span><br><span class="line">                .add(String.valueOf(StrPool.C_SPACE))</span><br><span class="line">                .add(String.valueOf(totalPageCount));</span><br><span class="line">        canvas.showTextAligned(p, x, y, TextAlignment.RIGHT);</span><br><span class="line">        pdfCanvas.addXObject(placeholder, x + space, y - descent);</span><br><span class="line">        pdfCanvas.release();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="水印"><a href="#水印" class="headerlink" title="水印"></a>水印</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 水印</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WaterMarkEventHandler</span> <span class="keyword">implements</span> <span class="title class_">IEventHandler</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 水印内容</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String waterMarkContent;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 一页中有几列水印</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> waterMarkX;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 一页中每列有多少水印</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> waterMarkY;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">WaterMarkEventHandler</span><span class="params">(String waterMarkContent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>(waterMarkContent, <span class="number">5</span>, <span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">WaterMarkEventHandler</span><span class="params">(String waterMarkContent, <span class="type">int</span> waterMarkX, <span class="type">int</span> waterMarkY)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.waterMarkContent = waterMarkContent;</span><br><span class="line">        <span class="built_in">this</span>.waterMarkX = waterMarkX;</span><br><span class="line">        <span class="built_in">this</span>.waterMarkY = waterMarkY;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleEvent</span><span class="params">(Event event)</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">PdfDocumentEvent</span> <span class="variable">documentEvent</span> <span class="operator">=</span> (PdfDocumentEvent) event;</span><br><span class="line">        <span class="type">PdfDocument</span> <span class="variable">document</span> <span class="operator">=</span> documentEvent.getDocument();</span><br><span class="line">        <span class="type">PdfPage</span> <span class="variable">page</span> <span class="operator">=</span> documentEvent.getPage();</span><br><span class="line">        <span class="type">Rectangle</span> <span class="variable">pageSize</span> <span class="operator">=</span> page.getPageSize();</span><br><span class="line"></span><br><span class="line">        <span class="type">PdfFont</span> <span class="variable">pdfFont</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            pdfFont = PdfFontFactory.createFont(<span class="string">&quot;STSongStd-Light&quot;</span>, <span class="string">&quot;UniGB-UCS2-H&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (IOException e)</span><br><span class="line">        &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">PdfCanvas</span> <span class="variable">pdfCanvas</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PdfCanvas</span>(page.newContentStreamAfter(), page.getResources(), document);</span><br><span class="line"></span><br><span class="line">        <span class="type">Paragraph</span> <span class="variable">waterMark</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Paragraph</span>(waterMarkContent).setOpacity(<span class="number">0.5f</span>);</span><br><span class="line">        <span class="type">Canvas</span> <span class="variable">canvas</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Canvas</span>(pdfCanvas, pageSize)</span><br><span class="line">                .setFontColor(WebColors.getRGBColor(<span class="string">&quot;lightgray&quot;</span>))</span><br><span class="line">                .setFontSize(<span class="number">16</span>)</span><br><span class="line">                .setFont(pdfFont);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; waterMarkX; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; waterMarkY; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                canvas.showTextAligned(waterMark, (<span class="number">150</span> + i * <span class="number">300</span>), (<span class="number">160</span> + j * <span class="number">150</span>), document.getNumberOfPages(), TextAlignment.CENTER, VerticalAlignment.BOTTOM, <span class="number">120</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        canvas.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Utils"><a href="#Utils" class="headerlink" title="Utils"></a>Utils</h3><h4 id="FreeMarkerUtils"><a href="#FreeMarkerUtils" class="headerlink" title="FreeMarkerUtils"></a>FreeMarkerUtils</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FreeMarkerUtils</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Template <span class="title function_">getTemplate</span><span class="params">(String template_path, String templateFileName)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Configuration</span> <span class="variable">configuration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line">        <span class="type">Template</span> <span class="variable">template</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            configuration.setDirectoryForTemplateLoading(<span class="keyword">new</span> <span class="title class_">File</span>(template_path));</span><br><span class="line">            configuration.setObjectWrapper(<span class="keyword">new</span> <span class="title class_">DefaultObjectWrapper</span>());</span><br><span class="line">            configuration.setDefaultEncoding(<span class="string">&quot;UTF-8&quot;</span>);   <span class="comment">//设置编码格式</span></span><br><span class="line">            <span class="comment">//模板文件</span></span><br><span class="line">            template = configuration.getTemplate(templateFileName + <span class="string">&quot;.ftl&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> template;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">genteratorFile</span><span class="params">(Map&lt;String, Object&gt; input, String template_path, String templateFileName, String savePath, String fileName)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Template</span> <span class="variable">template</span> <span class="operator">=</span> getTemplate(template_path, templateFileName);</span><br><span class="line">        <span class="type">File</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(savePath);</span><br><span class="line">        <span class="keyword">if</span> (!filePath.exists()) &#123;</span><br><span class="line">            filePath.mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">String</span> <span class="variable">filename</span> <span class="operator">=</span> savePath + <span class="string">&quot;\\&quot;</span> + fileName;</span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(filename);</span><br><span class="line">        <span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">            file.delete();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Writer</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            writer = <span class="keyword">new</span> <span class="title class_">OutputStreamWriter</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(filename), <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            template.process(input, writer);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">genterator</span><span class="params">(Map&lt;String, Object&gt; variables, String template_path, String templateFileName)</span>  <span class="keyword">throws</span> Exception</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Template</span> <span class="variable">template</span> <span class="operator">=</span> getTemplate(template_path, templateFileName);</span><br><span class="line">        <span class="type">StringWriter</span> <span class="variable">stringWriter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringWriter</span>();</span><br><span class="line">        <span class="type">BufferedWriter</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(stringWriter);</span><br><span class="line">        template.setEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        template.process(variables, writer);</span><br><span class="line">        <span class="type">String</span> <span class="variable">htmlStr</span> <span class="operator">=</span> stringWriter.toString();</span><br><span class="line">        writer.flush();</span><br><span class="line">        writer.close();</span><br><span class="line">        <span class="keyword">return</span> htmlStr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="HtmlToPdfUtils"><a href="#HtmlToPdfUtils" class="headerlink" title="HtmlToPdfUtils"></a>HtmlToPdfUtils</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HtmlToPdfUtils</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * html转pdf</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> inputStream  输入流</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> waterMark    水印</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fontPath     字体路径，ttc后缀的字体需要添加&lt;b&gt;,0&lt;b/&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> outputStream 输出流</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> : 2022/11/15 14:07</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">convertToPdf</span><span class="params">(InputStream inputStream, String waterMark, String fontPath, OutputStream outputStream)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 有两个pdfWriter和pdfDocument是因为为了解决这个页码的问题，</span></span><br><span class="line">        <span class="comment">// 原先页码是没办法获取到总的页码数量，经过一顿骚操作改造可以了，但是不知道会不会有隐藏风险</span></span><br><span class="line">        <span class="type">PdfWriter</span> <span class="variable">pdfWriter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PdfWriter</span>(outputStream);</span><br><span class="line">        <span class="type">PdfWriter</span> <span class="variable">pdfWriter1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PdfWriter</span>(outputStream);</span><br><span class="line">        <span class="type">PdfDocument</span> <span class="variable">pdfDocument</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PdfDocument</span>(pdfWriter);</span><br><span class="line">        <span class="type">PdfDocument</span> <span class="variable">pdfDocument1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PdfDocument</span>(pdfWriter1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置为A4大小并设置横向</span></span><br><span class="line"><span class="comment">//        PageSize pageSize = PageSize.A4.rotate();</span></span><br><span class="line">        pdfDocument.setDefaultPageSize(PageSize.A4.rotate());</span><br><span class="line">        pdfDocument1.setDefaultPageSize(PageSize.A4.rotate());</span><br><span class="line">        <span class="comment">// 如果是纵向就用下面这个</span></span><br><span class="line"><span class="comment">//        pdfDocument.setDefaultPageSize(PageSize.A4);</span></span><br><span class="line"><span class="comment">//        pdfDocument1.setDefaultPageSize(PageSize.A4);</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 添加水印</span></span><br><span class="line">         pdfDocument.addEventHandler(PdfDocumentEvent.END_PAGE, <span class="keyword">new</span> <span class="title class_">WaterMarkEventHandler</span>(waterMark));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加中文字体支持</span></span><br><span class="line">        <span class="type">ConverterProperties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ConverterProperties</span>();</span><br><span class="line">        <span class="type">FontProvider</span> <span class="variable">fontProvider</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FontProvider</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 添加自定义字体，</span></span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(fontPath)) &#123;</span><br><span class="line">            <span class="comment">// 下面是使用的鸿蒙字体</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">HARMONYOS_SANS_SC_REGULAR</span> <span class="operator">=</span> <span class="string">&quot;D:\\lot\\code\\study\\springboot-restful-starter\\src\\main\\resources\\fonts\\HARMONYOS_SANS_SC_REGULAR.TTF&quot;</span>;</span><br><span class="line">            <span class="type">String</span> <span class="variable">HARMONYOS_SANS_SC_BOLD</span> <span class="operator">=</span> <span class="string">&quot;D:\\lot\\code\\study\\springboot-restful-starter\\src\\main\\resources\\fonts\\HARMONYOS_SANS_SC_BOLD.TTF&quot;</span>;</span><br><span class="line">            <span class="type">String</span> <span class="variable">HARMONYOS_SANS_SC_BLACK</span> <span class="operator">=</span> <span class="string">&quot;D:\\lot\\code\\study\\springboot-restful-starter\\src\\main\\resources\\fonts\\HARMONYOS_SANS_SC_BLACK.TTF&quot;</span>;</span><br><span class="line">            <span class="type">PdfFont</span> <span class="variable">ttfFontOne</span> <span class="operator">=</span> PdfFontFactory.createFont(HARMONYOS_SANS_SC_REGULAR, PdfEncodings.IDENTITY_H, <span class="literal">false</span>);</span><br><span class="line">            <span class="type">PdfFont</span> <span class="variable">ttfFontTwo</span> <span class="operator">=</span> PdfFontFactory.createFont(HARMONYOS_SANS_SC_BOLD, PdfEncodings.IDENTITY_H, <span class="literal">false</span>);</span><br><span class="line">            <span class="type">PdfFont</span> <span class="variable">ttfFontThird</span> <span class="operator">=</span> PdfFontFactory.createFont(HARMONYOS_SANS_SC_BLACK, PdfEncodings.IDENTITY_H, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            fontProvider.addFont(ttfFontOne.getFontProgram());</span><br><span class="line">            fontProvider.addFont(ttfFontTwo.getFontProgram());</span><br><span class="line">            fontProvider.addFont(ttfFontThird.getFontProgram());</span><br><span class="line">            properties.setFontProvider(fontProvider);</span><br><span class="line">            properties.setCharset(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        properties.setFontProvider(fontProvider);</span><br><span class="line">        <span class="comment">// 读取Html文件流，查找出当中的&amp;nbsp;或出现类似的符号空格字符</span></span><br><span class="line">        Map&lt;String, Object&gt; map = readInputStrem(inputStream);</span><br><span class="line">        <span class="comment">// 需要先生成document，而不是直接生成pdf文件（因直接生成pdf文件会关闭流）</span></span><br><span class="line">        <span class="type">Document</span> <span class="variable">document</span> <span class="operator">=</span> HtmlConverter.convertToDocument((String) map.get(<span class="string">&quot;html&quot;</span>), pdfDocument1, properties);</span><br><span class="line"></span><br><span class="line">        document.flush();</span><br><span class="line">        <span class="type">PageXofY</span> <span class="variable">event</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PageXofY</span>(pdfDocument, document.getPdfDocument().getNumberOfPages());</span><br><span class="line"></span><br><span class="line">        pdfDocument.addEventHandler(PdfDocumentEvent.END_PAGE, event);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        inputStream = (InputStream) map.get(<span class="string">&quot;inputStream&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (inputStream != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="comment">// 生成pdf文档</span></span><br><span class="line">                HtmlConverter.convertToPdf(inputStream, pdfDocument, properties);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                log.error(<span class="string">&quot;转换失败！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                pdfWriter.close();</span><br><span class="line">                pdfDocument.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 读取HTML 流文件，并查询当中的&amp;nbsp;或类似符号直接替换为空格</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> inputStream</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String, Object&gt; <span class="title function_">readInputStrem</span><span class="params">(InputStream inputStream)</span> &#123;</span><br><span class="line">        HashMap&lt;String, Object&gt; returnMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 定义一些特殊字符的正则表达式 如：</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">regEx_special</span> <span class="operator">=</span> <span class="string">&quot;\\&amp;[a-zA-Z]&#123;1,10&#125;;&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//&lt;1&gt;创建字节数组输出流，用来输出读取到的内容</span></span><br><span class="line">            <span class="type">ByteArrayOutputStream</span> <span class="variable">baos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">            <span class="comment">//&lt;2&gt;创建缓存大小</span></span><br><span class="line">            <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>]; <span class="comment">// 1KB</span></span><br><span class="line">            <span class="comment">//每次读取到内容的长度</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">            <span class="comment">//&lt;3&gt;开始读取输入流中的内容</span></span><br><span class="line">            <span class="keyword">while</span> ((len = inputStream.read(buffer)) != -<span class="number">1</span>) &#123; <span class="comment">//当等于-1说明没有数据可以读取了</span></span><br><span class="line">                baos.write(buffer, <span class="number">0</span>, len);   <span class="comment">//把读取到的内容写到输出流中</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//&lt;4&gt; 把字节数组转换为字符串</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> baos.toString();</span><br><span class="line">            <span class="comment">//&lt;5&gt;关闭输入流和输出流</span></span><br><span class="line">            <span class="comment">//            inputStream.close();</span></span><br><span class="line">            baos.close();</span><br><span class="line">            <span class="comment">//            log.info(&quot;读取的内容：&#123;&#125;&quot;, content);</span></span><br><span class="line">            <span class="comment">//            判断HTML内容是否具有HTML的特殊字符标记</span></span><br><span class="line">            <span class="type">Pattern</span> <span class="variable">compile</span> <span class="operator">=</span> Pattern.compile(regEx_special, Pattern.CASE_INSENSITIVE);</span><br><span class="line">            <span class="type">Matcher</span> <span class="variable">matcher</span> <span class="operator">=</span> compile.matcher(content);</span><br><span class="line">            <span class="type">String</span> <span class="variable">replaceAll</span> <span class="operator">=</span> matcher.replaceAll(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//            log.info(&quot;替换后的内容：&#123;&#125;&quot;, replaceAll);</span></span><br><span class="line">            <span class="comment">//            将字符串转化为输入流返回</span></span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">stringStream</span> <span class="operator">=</span> getStringStream(replaceAll);</span><br><span class="line">            returnMap.put(<span class="string">&quot;inputStream&quot;</span>, stringStream);</span><br><span class="line">            returnMap.put(<span class="string">&quot;html&quot;</span>, replaceAll);</span><br><span class="line">            <span class="comment">//&lt;6&gt;返回结果</span></span><br><span class="line">            <span class="keyword">return</span> returnMap;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            log.error(<span class="string">&quot;错误信息：&#123;&#125;&quot;</span>, e.getMessage());</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将一个字符串转化为输入流</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sInputString 字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> InputStream <span class="title function_">getStringStream</span><span class="params">(String sInputString)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (sInputString != <span class="literal">null</span> &amp;&amp; !sInputString.trim().equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">ByteArrayInputStream</span> <span class="variable">tInputStringStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(sInputString.getBytes());</span><br><span class="line">                <span class="keyword">return</span> tInputStringStream;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestHtmlToPdf</span> &#123;</span><br><span class="line">    <span class="comment">// 模板路径</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">TEMP</span> <span class="operator">=</span> <span class="string">&quot;D:\\lot\\code\\study\\springboot-restful-starter\\src\\main\\resources\\templates\\&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 模板所需的数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, Object&gt; <span class="title function_">getContent</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 从数据库中获取数据， 出于演示目的， 这里数据不从数据库获取， 而是直接写死</span></span><br><span class="line">        <span class="type">Map</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">        input.put(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;测试title&quot;</span>);</span><br><span class="line">        input.put(<span class="string">&quot;logo&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        input.put(<span class="string">&quot;accountId&quot;</span>, <span class="string">&quot;MC&quot;</span> + UUID.randomUUID(<span class="literal">false</span>));</span><br><span class="line">        input.put(<span class="string">&quot;accountName&quot;</span>, <span class="string">&quot;MC&quot;</span> + UUID.randomUUID(<span class="literal">false</span>));</span><br><span class="line">        input.put(<span class="string">&quot;dateOfIssue&quot;</span>, DateUtil.now());</span><br><span class="line">        List&lt;Map&lt;String, String&gt;&gt; tableData = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            Map&lt;String, String&gt; rowData = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">            rowData.put(<span class="string">&quot;tableData1&quot;</span>, <span class="string">&quot;这是第&quot;</span> + (i + <span class="number">1</span>) + <span class="string">&quot;行的第一个表格数据行的第一个表格数据行的第一个表格数据行的第一个表格数据行的第一个表格数据行的第一个表格数据&quot;</span>);</span><br><span class="line">            rowData.put(<span class="string">&quot;tableData2&quot;</span>, <span class="string">&quot;这是第&quot;</span> + (i + <span class="number">1</span>) + <span class="string">&quot;行的第二个表格数据行的第一个表格数据行的第一个表格数据行的第一个表格数据行的第一个表格数据行的第一个表格数据行的第一个表格数据&quot;</span>);</span><br><span class="line">            tableData.add(rowData);</span><br><span class="line">        &#125;</span><br><span class="line">        input.put(<span class="string">&quot;tableData&quot;</span>, tableData);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        input.put(<span class="string">&quot;accountId&quot;</span>, UUID.randomUUID());</span><br><span class="line">        input.put(<span class="string">&quot;DateOfIssue&quot;</span>, DateUtil.today());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 准备美国人的姓和名的数组</span></span><br><span class="line">        String[] firstNames = &#123;<span class="string">&quot;James&quot;</span>, <span class="string">&quot;John&quot;</span>, <span class="string">&quot;Robert&quot;</span>, <span class="string">&quot;Michael&quot;</span>, <span class="string">&quot;William&quot;</span>&#125;;</span><br><span class="line">        String[] lastNames = &#123;<span class="string">&quot;Smith&quot;</span>, <span class="string">&quot;Johnson&quot;</span>, <span class="string">&quot;Williams&quot;</span>, <span class="string">&quot;Jones&quot;</span>, <span class="string">&quot;Brown&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用RandomUtil随机选择姓和名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">randomFirstName</span> <span class="operator">=</span> RandomUtil.randomEle(firstNames);</span><br><span class="line">        <span class="type">String</span> <span class="variable">randomLastName</span> <span class="operator">=</span> RandomUtil.randomEle(lastNames);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 组合姓名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">fullName</span> <span class="operator">=</span> randomFirstName + <span class="string">&quot; &quot;</span> + randomLastName;</span><br><span class="line">        input.put(<span class="string">&quot;accountName&quot;</span>, fullName);</span><br><span class="line"></span><br><span class="line">        List&lt;Map&lt;String, Object&gt;&gt; rows = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">double</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">500</span>; i++) &#123;</span><br><span class="line">            <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">            <span class="type">DecimalFormat</span> <span class="variable">df</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DecimalFormat</span>(<span class="string">&quot;#.##&quot;</span>);</span><br><span class="line">            String[] currencyArr = &#123;<span class="string">&quot;USD&quot;</span>, <span class="string">&quot;CNY&quot;</span>, <span class="string">&quot;EURO&quot;</span>&#125;;</span><br><span class="line">            String[] platformArr = &#123;<span class="string">&quot;Shopify&quot;</span>, <span class="string">&quot;WooCommerce&quot;</span>, <span class="string">&quot;Magento&quot;</span>&#125;;</span><br><span class="line">            String[] shipArr = &#123;<span class="string">&quot;AFL SHIPPING&quot;</span>, <span class="string">&quot;BFL SHIPPING&quot;</span>, <span class="string">&quot;CFL SHIPPING&quot;</span>&#125;;</span><br><span class="line">            String[] typeArr = &#123;<span class="string">&quot;Deposit&quot;</span>, <span class="string">&quot;Withdraw&quot;</span>, <span class="string">&quot;Refund&quot;</span>&#125;;</span><br><span class="line">            <span class="type">int</span> <span class="variable">minAmount</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">maxAmount</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="type">String</span> <span class="variable">date</span> <span class="operator">=</span> <span class="string">&quot;2024-04-&quot;</span> + r.nextInt(<span class="number">30</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">demo1</span> <span class="operator">=</span> <span class="string">&quot;DemoDemoDemoDemoDemoDemoDemo&quot;</span> + RandomUtil.randomNumbers(<span class="number">10</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">demo2</span> <span class="operator">=</span> <span class="string">&quot;Demo&quot;</span> + RandomUtil.randomNumbers(Integer.valueOf(RandomUtil.randomNumbers(<span class="number">1</span>)));</span><br><span class="line">            <span class="type">String</span> <span class="variable">accNumber</span> <span class="operator">=</span> String.valueOf(r.nextLong()).substring(<span class="number">1</span>, <span class="number">14</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">currency</span> <span class="operator">=</span> currencyArr[r.nextInt(currencyArr.length)];</span><br><span class="line">            <span class="type">String</span> <span class="variable">platform</span> <span class="operator">=</span> platformArr[r.nextInt(platformArr.length)];</span><br><span class="line">            <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;Ma Wang&quot;</span> + RandomUtil.randomNumbers(<span class="number">10</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">ship</span> <span class="operator">=</span> shipArr[r.nextInt(shipArr.length)];</span><br><span class="line">            <span class="type">String</span> <span class="variable">quantity</span> <span class="operator">=</span> String.valueOf(r.nextInt(<span class="number">30</span>));</span><br><span class="line">            <span class="type">String</span> <span class="variable">type</span> <span class="operator">=</span> typeArr[r.nextInt(typeArr.length)];</span><br><span class="line">            <span class="type">String</span> <span class="variable">amount</span> <span class="operator">=</span> df.format(minAmount + (maxAmount - minAmount) * r.nextDouble());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            Map&lt;String, Object&gt; row = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">            row.put(<span class="string">&quot;y&quot;</span>, y);</span><br><span class="line">            row.put(<span class="string">&quot;part1&quot;</span>, date);</span><br><span class="line">            row.put(<span class="string">&quot;part2&quot;</span>, demo1);</span><br><span class="line">            row.put(<span class="string">&quot;part3&quot;</span>, demo2);</span><br><span class="line">            row.put(<span class="string">&quot;part4&quot;</span>, accNumber);</span><br><span class="line">            row.put(<span class="string">&quot;part5&quot;</span>, currency);</span><br><span class="line">            row.put(<span class="string">&quot;part6&quot;</span>, platform);</span><br><span class="line">            row.put(<span class="string">&quot;part7&quot;</span>, name);</span><br><span class="line">            row.put(<span class="string">&quot;part8&quot;</span>, ship);</span><br><span class="line">            row.put(<span class="string">&quot;part10&quot;</span>, currency);</span><br><span class="line">            row.put(<span class="string">&quot;part11&quot;</span>, quantity);</span><br><span class="line">            row.put(<span class="string">&quot;part12&quot;</span>, currency);</span><br><span class="line">            row.put(<span class="string">&quot;part13&quot;</span>, amount);</span><br><span class="line">            row.put(<span class="string">&quot;part9&quot;</span>, type);</span><br><span class="line">            rows.add(row);</span><br><span class="line">            y += <span class="number">15</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        input.put(<span class="string">&quot;rows&quot;</span>, rows);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> input;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        extracted(<span class="string">&quot;thread-12&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">extracted</span><span class="params">(String filename)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">startTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        <span class="type">String</span> <span class="variable">temp</span> <span class="operator">=</span> <span class="string">&quot;test&quot;</span>;</span><br><span class="line">        <span class="comment">// 指定模板渲染值并生成html文件至指定位置</span></span><br><span class="line">        FreeMarkerUtils.genteratorFile(getContent(),</span><br><span class="line">                TEMP,</span><br><span class="line">                temp,</span><br><span class="line">                TEMP,</span><br><span class="line">                temp + <span class="string">&quot;.html&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 需转换的html文件名称</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">htmlFile</span> <span class="operator">=</span> temp + <span class="string">&quot;.html&quot;</span>;</span><br><span class="line">        <span class="comment">// 转换好pdf存储名称</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">pdfFile</span> <span class="operator">=</span> filename + <span class="string">&quot;.pdf&quot;</span>;</span><br><span class="line">        <span class="comment">// 自定义水印</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">waterMarkText</span> <span class="operator">=</span> <span class="string">&quot;JYX&quot;</span>;</span><br><span class="line">        <span class="comment">// 读取需转换的html文件</span></span><br><span class="line">        <span class="comment">// 读取需转换的html文件</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(TEMP + htmlFile);</span><br><span class="line">        <span class="comment">// 写出pdf存储位置</span></span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(TEMP + pdfFile);</span><br><span class="line">        <span class="type">String</span> <span class="variable">FONT_TTF_PATH</span> <span class="operator">=</span> <span class="string">&quot;D:\\lot\\code\\springboot-restful-starter\\src\\main\\resources\\fonts\\HARMONYOS_SANS_SC_REGULAR.TTF&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开始转换html生成pdf文档</span></span><br><span class="line">        HtmlToPdfUtils.convertToPdf(inputStream, waterMarkText, FONT_TTF_PATH, outputStream);</span><br><span class="line">        log.info(<span class="string">&quot;转换结束，耗时：&#123;&#125;ms&quot;</span>, System.currentTimeMillis() - startTime);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        .a4-wrapper &#123;</span><br><span class="line">            width: 297mm;</span><br><span class="line">            height: 210mm;</span><br><span class="line">            padding: 20mm;</span><br><span class="line">            box-sizing: border-box;</span><br><span class="line">            background: white;</span><br><span class="line">        &#125;</span><br><span class="line">        body &#123;</span><br><span class="line">            margin: 20px;</span><br><span class="line">            font-family: Arial, sans-serif;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        table &#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            border-collapse: collapse;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        th &#123;</span><br><span class="line">            border-bottom: 1px solid #d3d3d3;</span><br><span class="line">            padding: 10px;</span><br><span class="line">            text-align: left;</span><br><span class="line">            margin-bottom: 20px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        td &#123;</span><br><span class="line">            border: none;</span><br><span class="line">            padding: 10px;</span><br><span class="line">            text-align: left;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .logo &#123;</span><br><span class="line">            display: block;</span><br><span class="line">            margin-left: auto;</span><br><span class="line">            margin-right: auto;</span><br><span class="line">            width: 50%;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .title &#123;</span><br><span class="line">            text-align: center;</span><br><span class="line">            margin-bottom: 20px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .account-info &#123;</span><br><span class="line">            margin-left: 10%;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .date &#123;</span><br><span class="line">            margin-right: 10%;</span><br><span class="line">            text-align: right;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .page &#123;</span><br><span class="line">            page-break-after: always;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div class=&quot;header&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;account-info&quot;&gt;</span><br><span class="line">        &lt;img src=&quot;$&#123;logo!&quot;#&quot;&#125;&quot; class=&quot;logo&quot; alt=&quot;Logo&quot;/&gt;</span><br><span class="line">        &lt;h1 class=&quot;title&quot;&gt;$&#123;title!&quot;Title&quot;&#125;&lt;/h1&gt;</span><br><span class="line">        &lt;p&gt;Account ID: $&#123;accountId!&quot;#&quot;&#125;&lt;/p&gt;</span><br><span class="line">        &lt;p&gt;Account Name: $&#123;accountName!&quot;#&quot;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;date&quot;&gt;</span><br><span class="line">        &lt;p&gt;Date of issue: $&#123;dateOfIssue!&quot;#&quot;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;thead&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;th&gt;固定表头1&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;固定表头2&lt;/th&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;/thead&gt;</span><br><span class="line">    &lt;tbody&gt;</span><br><span class="line">    &lt;#list tableData as row&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td style=&quot;word-break: break-all; max-width: 100px;&quot;&gt;$&#123;row.tableData1&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td style=&quot;word-break: break-all; max-width: 100px;&quot;&gt;$&#123;row.tableData2&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/#list&gt;</span><br><span class="line">    &lt;/tbody&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;业务需求&quot;&gt;&lt;a href=&quot;#业务需求&quot; class=&quot;headerlink&quot; title=&quot;业务需求&quot;&gt;&lt;/a&gt;业务需求&lt;/h2&gt;&lt;p&gt;项目需要用到导出pdf格式的列表，正常情况下是导出excel表格的，但是产品要求要导出pdf，组长叫我尝试一下itextpd</summary>
      
    
    
    
    <category term="开发日志" scheme="https://www.loveasd.com/categories/%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/"/>
    
    
    <category term="itextpdf" scheme="https://www.loveasd.com/tags/itextpdf/"/>
    
    <category term="thymeleaf" scheme="https://www.loveasd.com/tags/thymeleaf/"/>
    
    <category term="html2pdf" scheme="https://www.loveasd.com/tags/html2pdf/"/>
    
  </entry>
  
  <entry>
    <title>vue3的el-form表单输入响应式失效问题（input、单选都无法操作）</title>
    <link href="https://www.loveasd.com/p/cee62a0f.html"/>
    <id>https://www.loveasd.com/p/cee62a0f.html</id>
    <published>2024-04-18T10:19:57.625Z</published>
    <updated>2024-04-18T10:19:57.625Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>刚到公司，摸一下鱼。<br>昨天朋友问了我一个vue3的一个对话框里面input框和单选框都无法输入或者选中，看了代码也没有禁用啥的操作。<br>一切都正常，最后疯狂开启谷歌，发现命名冲突问题了。</p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p><a class="simple-lightbox" href="https://oss.loveasd.com/loveasd-oss/2023/07/691260e6551df873b35d9dcebe54d020.png"><img   src="/images/loading.svg" data-src="https://oss.loveasd.com/loveasd-oss/2023/07/691260e6551df873b35d9dcebe54d020.png"  alt="image-20230721092040352" lazyload></a></p><p>从上面可以看到，响应式的名字与model的名字一样，导致了冲突，所以就会出现输入框无法输入，选择框无法选择问题。</p><h3 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h3><p>修改名字为不同即可！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;刚到公司，摸一下鱼。&lt;br&gt;昨天朋友问了我一个vue3的一个对话框里面input框和单选框都无法输入或者选中，看了代码也没有</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://www.loveasd.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="vue3" scheme="https://www.loveasd.com/tags/vue3/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://www.loveasd.com/p/4a17b156.html"/>
    <id>https://www.loveasd.com/p/4a17b156.html</id>
    <published>2024-04-18T10:19:57.599Z</published>
    <updated>2024-04-18T10:19:57.599Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>面试官：怎么设计一个部门表？</title>
    <link href="https://www.loveasd.com/p/4c646377.html"/>
    <id>https://www.loveasd.com/p/4c646377.html</id>
    <published>2024-03-12T06:00:00.000Z</published>
    <updated>2024-04-18T10:19:57.599Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>昨天面试遇到的一个问题，要构建一个部门表，基础字段有部门名、部门id。</p><p>问，怎么设计这个部门？如果要你写一条SQL，根据部门ID查询出直接子部门和非直接子部门，那要怎么设计？多少个表？</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>表结构设计</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE dept (</span><br><span class="line">    dept_id INT AUTO_INCREMENT PRIMARY KEY,</span><br><span class="line">    dept_name VARCHAR(50) NOT NULL,</span><br><span class="line">    parent_id INT,</span><br><span class="line">    ancestors VARCHAR(255)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>解释，ancestors 存放的是祖宗的主键值，主要是用来存放本部门的祖宗的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">假设部门的关系如下：</span><br><span class="line"></span><br><span class="line">- A部门: ID=1</span><br><span class="line">- B部门: ID=2（父部门是A）</span><br><span class="line">- C部门: ID=3（父部门是B）</span><br><span class="line"></span><br><span class="line">在这种情况下，部门的`ancestors`字段会设置为：</span><br><span class="line"></span><br><span class="line">- A部门的`ancestors`为空，因为它是顶级部门。</span><br><span class="line">- B部门的`ancestors`为`1`，表示A是B的直接上级。</span><br><span class="line">- C部门的`ancestors`为`1,2`，表示A是C的顶级上级，B是C的直接上级。</span><br></pre></td></tr></table></figure><p>这样子做的好处是，查询直接子部门和非直接子部门只需要遍历这个ancestors 即可，无需借助其他的。如果没有<code>ancestors</code>的帮助，我们需要在代码中通过parent_id逐层逐级的遍历列举以及合并列表。查询的sql也只需要这样子。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select * from dept</span><br><span class="line">WHERE dept_id IN ( SELECT dept_id FROM dept WHERE find_in_set(&#x27;查询的ID&#x27;, ancestors ) )</span><br><span class="line"></span><br><span class="line"># FIND_IN_SET(&#x27;2&#x27;, ancestors) 就是在 ancestors 字段中查找是否存在 &#x27;2&#x27;，</span><br><span class="line"># 如果存在，返回其位置（非零值）。</span><br></pre></td></tr></table></figure><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><p>每次维护表的时候，都要专门去维护ancestors 这个节点，会加大维护成本</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h2&gt;&lt;p&gt;昨天面试遇到的一个问题，要构建一个部门表，基础字段有部门名、部门id。&lt;/p&gt;
&lt;p&gt;问，怎么设计这个部门？如果要你写一条SQL，根据部门I</summary>
      
    
    
    
    <category term="开发日志" scheme="https://www.loveasd.com/categories/%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/"/>
    
    
    <category term="Mysql" scheme="https://www.loveasd.com/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>人大金仓创建Postgresql表并设置主键自增</title>
    <link href="https://www.loveasd.com/p/d60be7ec.html"/>
    <id>https://www.loveasd.com/p/d60be7ec.html</id>
    <published>2023-07-11T02:48:00.000Z</published>
    <updated>2024-04-18T10:19:57.623Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>最近实习了，公司产品用的人大金仓，底层数据库是Postgresql。<br>然后最近在建表，习惯了navicate，用这个一脸懵逼。<br>而且因为需要设置主键自增，在可视化操作那里无法单独添加，很奇怪，会疯狂报错。<br>我观察了其他大佬建的表，都是有一个nextval…啥的，谷歌了一波之后发现这是Postgresql的东西。<br>所以得手动写sql，别人推荐的是加一个关键字就可以了，但是我的一直不可以，所以这个教程先记录一下手动建立序列的方法。</p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><h4 id="第一步-创建序列"><a href="#第一步-创建序列" class="headerlink" title="第一步 创建序列"></a>第一步 创建序列</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE SEQUENCE 模式.table_name_id_seq; </span><br><span class="line"></span><br><span class="line">-- 查询</span><br><span class="line">select nextval(&#x27;模式.table_name_id_seq&#x27;::regclass);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="第二步-创建表"><a href="#第二步-创建表" class="headerlink" title="第二步 创建表"></a>第二步 创建表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE 模式.sys_oper_sql_log (</span><br><span class="line">    id BIGINT PRIMARY KEY DEFAULT nextval(&#x27;trs_cloud.sys_oper_sql_log_id_seq&#x27;::regclass),</span><br><span class="line">    sql_content TEXT ,</span><br><span class="line">    oper_id BIGINT </span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h2><p>可以直接使用serial关键词来设定，默认id类型是integer，需要手动调整为bigint或者其他</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE trs_cloud.lm_book_place (</span><br><span class="line">    id serial PRIMARY KEY ,</span><br><span class="line">    book_location varchar(50)  ,</span><br><span class="line">    is_refuse_lend char default &#x27;0&#x27;::bpchar,</span><br><span class="line">    create_by varchar(60),</span><br><span class="line">    create_time timestamp without time zone,</span><br><span class="line">    update_by varchar(60),</span><br><span class="line">    update_time timestamp without time zone</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p><del>人大金仓不像Navicate一样，可视化插入，会提示报错，<br>可能原因是他要先select那个nextval，然后可视化插入会提前先自检不能为空<br>所以用insert into</del></p><p>实测可以用Navicate连接，操作虽然跟Mysql的不同，但是至少比人大金仓好太多，人大总是有奇奇怪怪的bug。</p><h3 id="借鉴"><a href="#借鉴" class="headerlink" title="借鉴"></a>借鉴</h3><ul><li><a href="https://blog.csdn.net/aaaaaaa1516682014292/article/details/128130697">https://blog.csdn.net/aaaaaaa1516682014292/article/details/128130697</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;最近实习了，公司产品用的人大金仓，底层数据库是Postgresql。&lt;br&gt;然后最近在建表，习惯了navicate，用这个一</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://www.loveasd.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="人大金仓,Postgresql" scheme="https://www.loveasd.com/tags/%E4%BA%BA%E5%A4%A7%E9%87%91%E4%BB%93-Postgresql/"/>
    
  </entry>
  
  <entry>
    <title>利用正则表达式在Vscode上去除空行、注释</title>
    <link href="https://www.loveasd.com/p/5623b276.html"/>
    <id>https://www.loveasd.com/p/5623b276.html</id>
    <published>2023-06-01T06:28:00.000Z</published>
    <updated>2024-04-18T10:19:57.619Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>最近被软著搞到疯了，满60页代码、不能出现空行注释等情况。</p><p>代码均是在项目copy过来的，所以肯定是有空行和注释的，在word上可以一键去除空行，但是注释就有点麻烦。</p><p>于是想到把文字复制到Vscode上面，通过正则来去除这些。</p><p>然后6000多行的代码，去除空行和注释以后，剩下4000多，累了…</p><h1 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h1><p>首先在vscode按住CTRL+H，然后输入下面的正则</p><p><a class="simple-lightbox" href="https://oss.loveasd.com/loveasd-oss/2023/06/b6d2bd002ec3b9be4a3eea319eff3eca.png"><img   src="/images/loading.svg" data-src="https://oss.loveasd.com/loveasd-oss/2023/06/b6d2bd002ec3b9be4a3eea319eff3eca.png"  alt="image-20230601131147784" lazyload></a></p><h1 id="选中全部查询的"><a href="#选中全部查询的" class="headerlink" title="选中全部查询的"></a>选中全部查询的</h1><p>输入相对应的正则以后，应该就可以看到有匹配的，这时候就要选择多个查找出来的</p><p><a class="simple-lightbox" href="https://oss.loveasd.com/loveasd-oss/2023/06/0b5809ebeb6279fc362300c068172a4d.png"><img   src="/images/loading.svg" data-src="https://oss.loveasd.com/loveasd-oss/2023/06/0b5809ebeb6279fc362300c068172a4d.png"  alt="image-20230601131637155" lazyload></a></p><h1 id="去除注释"><a href="#去除注释" class="headerlink" title="去除注释"></a>去除注释</h1><h2 id="单行注释"><a href="#单行注释" class="headerlink" title="单行注释"></a>单行注释</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//[\s\S]*?\n</span><br></pre></td></tr></table></figure><h2 id="块注释"><a href="#块注释" class="headerlink" title="块注释"></a>块注释</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/\*(.|\r\n|\n)*?\*/</span><br></pre></td></tr></table></figure><h2 id="所有注释"><a href="#所有注释" class="headerlink" title="所有注释"></a>所有注释</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\/\*[\s\S]*\*\/|\/\/.*</span><br></pre></td></tr></table></figure><h2 id="html注释"><a href="#html注释" class="headerlink" title="html注释"></a>html注释</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--(.*?)--&gt;</span><br></pre></td></tr></table></figure><h1 id="去除空行"><a href="#去除空行" class="headerlink" title="去除空行"></a>去除空行</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^\s*(?=\r?$)\n</span><br></pre></td></tr></table></figure><h1 id="参照"><a href="#参照" class="headerlink" title="参照"></a>参照</h1><ul><li><a href="https://blog.csdn.net/qq_39779233/article/details/120416227?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1-120416227-blog-128870790.235%5Ev36%5Epc_relevant_default_base3&spm=1001.2101.3001.4242.2&utm_relevant_index=4">Vscode 快捷操作_vscode删除一列_</a></li><li><a href="https://blog.csdn.net/yjjjjz/article/details/89521414?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1-89521414-blog-121166373.235%5Ev36%5Epc_relevant_default_base3&spm=1001.2101.3001.4242.2&utm_relevant_index=2">(29条消息) VScode使用正则表达式快速删除注释</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h1&gt;&lt;p&gt;最近被软著搞到疯了，满60页代码、不能出现空行注释等情况。&lt;/p&gt;
&lt;p&gt;代码均是在项目copy过来的，所以肯定是有空行和注</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://www.loveasd.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="正则表达式" scheme="https://www.loveasd.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
    <category term="VSCODE" scheme="https://www.loveasd.com/tags/VSCODE/"/>
    
  </entry>
  
  <entry>
    <title>RabbitMQ入门学习</title>
    <link href="https://www.loveasd.com/p/16a9afcf.html"/>
    <id>https://www.loveasd.com/p/16a9afcf.html</id>
    <published>2023-05-31T06:28:00.000Z</published>
    <updated>2024-04-18T10:19:57.618Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、MQ入门"><a href="#一、MQ入门" class="headerlink" title="一、MQ入门"></a>一、MQ入门</h1><h2 id="1-1-消息中间件的协议"><a href="#1-1-消息中间件的协议" class="headerlink" title="1.1 消息中间件的协议"></a>1.1 消息中间件的协议</h2><h3 id="1-AMQP协议"><a href="#1-AMQP协议" class="headerlink" title="1. AMQP协议"></a>1. AMQP协议</h3><ul><li><p>分布式事务；</p></li><li><p>消息的持久化；</p></li><li><p>高性能、高可靠的处理优势；</p></li></ul><h3 id="2-MQTT协议"><a href="#2-MQTT协议" class="headerlink" title="2. MQTT协议"></a>2. MQTT协议</h3><ul><li><p>物联网的重要组成部分。</p></li><li><p>低延迟、低带宽、不支持事务</p></li></ul><h3 id="3-OpenMessage协议"><a href="#3-OpenMessage协议" class="headerlink" title="3. OpenMessage协议"></a>3. OpenMessage协议</h3><ul><li><p>RocketMQ采用的协议。国内的阿里、雅虎等公司一起创作。</p></li><li><p>支持事务，持久化</p></li></ul><h3 id="4-Kafka协议"><a href="#4-Kafka协议" class="headerlink" title="4. Kafka协议"></a>4. Kafka协议</h3><ul><li><p>基于TCP&#x2F;IP协议，采用二进制进行传输。</p></li><li><p>结构简单，不支持事务，支持持久化</p></li></ul><h2 id="1-2-消息分发机制"><a href="#1-2-消息分发机制" class="headerlink" title="1.2 消息分发机制"></a>1.2 消息分发机制</h2><table><thead><tr><th></th><th>ActiveMQ</th><th>RabbitMQ</th><th>Kafka</th><th>RocketMQ</th></tr></thead><tbody><tr><td>发布订阅</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>轮询分发</td><td>√</td><td>√</td><td>√</td><td></td></tr><tr><td>公平分发</td><td></td><td>√</td><td>√</td><td></td></tr><tr><td>重发</td><td>√</td><td>√</td><td></td><td>√</td></tr><tr><td>消息拉取</td><td></td><td>√</td><td>√</td><td>√</td></tr></tbody></table><p>轮询分发、公平分发它们都是保证消息只能够读取一次。</p><ul><li><p>轮询分发：每个消费者消费的消息总数量是一致的；</p></li><li><p>公平分发：能者多劳，消费者性能好，处理的请求就会比较多；必须手动应答，不支持自动应答</p></li></ul><h2 id="1-3-消息的高可用"><a href="#1-3-消息的高可用" class="headerlink" title="1.3 消息的高可用"></a>1.3 消息的高可用</h2><h3 id="集群模式1：Master-Slave：主从共享数据"><a href="#集群模式1：Master-Slave：主从共享数据" class="headerlink" title="集群模式1：Master-Slave：主从共享数据"></a>集群模式1：Master-Slave：主从共享数据</h3><p>生产者将消息发送到主节点，所有的都节点连接这个消息队列共享这块的数据区域。主节点写入，一旦主节点挂掉，从节点继续服务。</p><h3 id="集群模式2：Master-Slave：主从同步数据"><a href="#集群模式2：Master-Slave：主从同步数据" class="headerlink" title="集群模式2：Master-Slave：主从同步数据"></a>集群模式2：Master-Slave：主从同步数据</h3><p>与Redis的主从同步差不多</p><h3 id="集群模式3：多主集群同步部署模式"><a href="#集群模式3：多主集群同步部署模式" class="headerlink" title="集群模式3：多主集群同步部署模式"></a>集群模式3：多主集群同步部署模式</h3><p>与2差不多，写入是可以任意节点进行写入。</p><h3 id="集群模式4：多主集群转发部署模式"><a href="#集群模式4：多主集群转发部署模式" class="headerlink" title="集群模式4：多主集群转发部署模式"></a>集群模式4：多主集群转发部署模式</h3><p>元数据共享，当查找数据的时候，就会判断消息的元数据是否存在，存在则返回，否则就去问其他的消费者。</p><h3 id="集群模式5：Master-Slave与Broker-Cluster组合方案"><a href="#集群模式5：Master-Slave与Broker-Cluster组合方案" class="headerlink" title="集群模式5：Master-Slave与Broker-Cluster组合方案"></a>集群模式5：Master-Slave与Broker-Cluster组合方案</h3><p><strong>集群模式的总结</strong></p><ul><li>消息共享</li><li>消息同步</li><li>元数据共享</li></ul><h2 id="1-4-消息的高可靠"><a href="#1-4-消息的高可靠" class="headerlink" title="1.4 消息的高可靠"></a>1.4 消息的高可靠</h2><ul><li>消息的传输：协议保证</li><li>消息的存储：持久化</li></ul><h2 id="1-5-MQ的使用场景"><a href="#1-5-MQ的使用场景" class="headerlink" title="1.5 MQ的使用场景"></a>1.5 MQ的使用场景</h2><p>流量消峰、应用解耦、异步处理</p><p>在说这个部分的时候，跟自己的业务结合一起去阐述三个场景。</p><h1 id="二、RabbitMQ"><a href="#二、RabbitMQ" class="headerlink" title="二、RabbitMQ"></a>二、RabbitMQ</h1><h2 id="2-1-RabbitMQ安装"><a href="#2-1-RabbitMQ安装" class="headerlink" title="2.1 RabbitMQ安装"></a>2.1 RabbitMQ安装</h2><p>首先可以进入RabbitMQ官网上查看 RabbitMQ Erlang版本要求</p><p>Linux安装视频：<a href="https://www.bilibili.com/video/BV1dX4y1V73G?p=9">https://www.bilibili.com/video/BV1dX4y1V73G?p=9</a></p><p>Windows安装文章：<a href="https://www.cnblogs.com/saryli/p/9729591.html">https://www.cnblogs.com/saryli/p/9729591.html</a></p><p>Docker安装视频：<a href="https://www.bilibili.com/video/BV1dX4y1V73G?p=10">https://www.bilibili.com/video/BV1dX4y1V73G?p=10</a></p><blockquote><h5 id="端口15672：通过-http-serverip-15672-访问-RabbitMQ-的-Web-管理界面，默认用户名密码都是-guest"><a href="#端口15672：通过-http-serverip-15672-访问-RabbitMQ-的-Web-管理界面，默认用户名密码都是-guest" class="headerlink" title="端口15672：通过 http://serverip:15672 访问 RabbitMQ 的 Web 管理界面，默认用户名密码都是 guest"></a>端口15672：通过 <a href="http://serverip:15672/">http://serverip:15672</a> 访问 RabbitMQ 的 Web 管理界面，默认用户名密码都是 guest</h5><h5 id="端口5672-5671（-used-by-AMQP-0-9-1-and-1-0-clients-without-and-with-TLS-）由AMQP0-9-1和1-0客户机使用，不带和带TLS"><a href="#端口5672-5671（-used-by-AMQP-0-9-1-and-1-0-clients-without-and-with-TLS-）由AMQP0-9-1和1-0客户机使用，不带和带TLS" class="headerlink" title="端口5672,5671（ used by AMQP 0-9-1 and 1.0 clients without and with TLS ）由AMQP0-9-1和1.0客户机使用，不带和带TLS"></a>端口5672,5671（ used by AMQP 0-9-1 and 1.0 clients without and with TLS ）由AMQP0-9-1和1.0客户机使用，不带和带TLS</h5><h5 id="端口25672：用于节点间和CLI工具通信（Erlang分发服务器端口），并且是从动态范围分配（默认情况下限制为一个端口，计算为AMQP端口-20000）"><a href="#端口25672：用于节点间和CLI工具通信（Erlang分发服务器端口），并且是从动态范围分配（默认情况下限制为一个端口，计算为AMQP端口-20000）" class="headerlink" title="端口25672：用于节点间和CLI工具通信（Erlang分发服务器端口），并且是从动态范围分配（默认情况下限制为一个端口，计算为AMQP端口+20000）"></a>端口25672：用于节点间和CLI工具通信（Erlang分发服务器端口），并且是从动态范围分配（默认情况下限制为一个端口，计算为AMQP端口+20000）</h5></blockquote><h2 id="2-2-RabbitMQ的核心概念"><a href="#2-2-RabbitMQ的核心概念" class="headerlink" title="2.2 RabbitMQ的核心概念"></a>2.2 RabbitMQ的核心概念</h2><p>生产者、交换机、队列、消费者</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、MQ入门&quot;&gt;&lt;a href=&quot;#一、MQ入门&quot; class=&quot;headerlink&quot; title=&quot;一、MQ入门&quot;&gt;&lt;/a&gt;一、MQ入门&lt;/h1&gt;&lt;h2 id=&quot;1-1-消息中间件的协议&quot;&gt;&lt;a href=&quot;#1-1-消息中间件的协议&quot; class=&quot;head</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://www.loveasd.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="RabbitMQ" scheme="https://www.loveasd.com/tags/RabbitMQ/"/>
    
  </entry>
  
  <entry>
    <title>用油猴脚本来自动填写问卷星的调查问卷，分分钟100+</title>
    <link href="https://www.loveasd.com/p/9a4d61d1.html"/>
    <id>https://www.loveasd.com/p/9a4d61d1.html</id>
    <published>2023-05-14T06:28:00.000Z</published>
    <updated>2024-04-18T10:19:57.621Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在写一份调查问卷，用问卷星系统进行填写调查报告，不过这个调查数据也挺水的，只要份数够就行了，所以我就想到可以利用脚本来自动填写问卷。其实之前也有用的Python写的脚本，但是感觉有时候挺麻烦的。</p><p>今天搜了一下发现一个很有用的油猴脚本，号称三分钟刷完100份问卷，测试了一下确实可以，但是为了模拟真人填写，我花了20分钟填了387份。想学吗？我教你啊！</p><p>这个脚本食用起来需要一定的编程基础，不过按照我的教程来做，也可以自己搞定！再也不用求爷爷告奶奶去让别人填问卷啦！</p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><h3 id="安装油猴"><a href="#安装油猴" class="headerlink" title="安装油猴"></a>安装油猴</h3><p>这个直接浏览器安装插件就好了，根据自己对应的浏览器去安装。</p><p>Edge：<a href="https://microsoftedge.microsoft.com/addons/detail/tampermonkey/iikmkjmpaadaobahmlepeloendndfphd?hl=zh-CN">Tampermonkey</a></p><p>Chrome：<a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo">Tampermonkey</a></p><p>之前在公众号也有写过安装油猴插件的文章，可以看看→[小白必看的油猴插件安装使用教程!!](<a href="https://mp.weixin.qq.com/s?__biz=Mzk0NTI1MjM3Mw==&mid=2247486914&idx=1&sn=b359ae431fee0df65c6843d342dbb7ad&chksm=c3197cb8f46ef5aede63a2dfc3332c5ff5fda5ca20a0b50dc44290daea72a6e8af390363722f&scene=21#wechat_redirect">小白必看的油猴插件安装使用教程!! (qq.com)</a>)</p><h3 id="安装脚本"><a href="#安装脚本" class="headerlink" title="安装脚本"></a>安装脚本</h3><p>安装完油猴插件直接安装脚本就可以了。</p><p>油猴脚本：<a href="https://greasyfork.org/zh-CN/scripts/465842-%E9%97%AE%E5%8D%B7%E6%98%9F%E5%9C%A8%E7%BA%BF%E5%88%B7">问卷星在线刷 (greasyfork.org)</a></p><p>进入脚本安装网页，点击下图这个按钮就可安装！<br><a class="simple-lightbox" href="https://oss.loveasd.com/loveasd-oss//2023/05/6abdd1da20f12d51bdc0d5ff9793d64b.png"><img   src="/images/loading.svg" data-src="https://oss.loveasd.com/loveasd-oss//2023/05/6abdd1da20f12d51bdc0d5ff9793d64b.png"  alt="图片" lazyload></a></p><p>安装好脚本，打开问卷星的问卷网站，看到这个提示，就说明脚本安装成功了，可以开搞了！</p><p><a class="simple-lightbox" href="https://oss.loveasd.com/loveasd-oss/2023/05/27f86b65bbc20e7f927a4d76904927c9.png"><img   src="/images/loading.svg" data-src="https://oss.loveasd.com/loveasd-oss/2023/05/27f86b65bbc20e7f927a4d76904927c9.png"  alt="图片" lazyload></a></p><h3 id="编辑脚本信息"><a href="#编辑脚本信息" class="headerlink" title="编辑脚本信息"></a>编辑脚本信息</h3><p>安装完脚本以后，需要进入<strong>代码编辑页面</strong>进行题目答案以及比例的设置。</p><p>按照下图的步骤进入代码编辑页面。</p><p><a class="simple-lightbox" href="https://oss.loveasd.com/loveasd-oss/2023/05/c87975dc6ddef66e7734386e5f2c1152.png"><img   src="/images/loading.svg" data-src="https://oss.loveasd.com/loveasd-oss/2023/05/c87975dc6ddef66e7734386e5f2c1152.png"  alt="图片" lazyload></a></p><p>进入代码编辑页面，往下滑就可以找到这个**&#x2F;&#x2F; 定义自己问卷的 url** 的关键字，把下面网址替换成你的问卷星问卷的地址，注意不能把引号什么的搞掉，否则回报错无法运行。</p><p><a class="simple-lightbox" href="https://oss.loveasd.com/loveasd-oss/2023/05/00f9ba61055861afb9deabe14e9381d7.png"><img   src="/images/loading.svg" data-src="https://oss.loveasd.com/loveasd-oss/2023/05/00f9ba61055861afb9deabe14e9381d7.png"  alt="image-20230514131025363" lazyload></a></p><p>下面的图示就是一种代码错误的提示，因为把网址左边的单引号去掉了，会导致编译时错误。</p><p><a class="simple-lightbox" href="https://oss.loveasd.com/loveasd-oss/2023/05/93501b4237befba34a66587a973e5dfe.png"><img   src="/images/loading.svg" data-src="https://oss.loveasd.com/loveasd-oss/2023/05/93501b4237befba34a66587a973e5dfe.png"  alt="图片" lazyload></a></p><p>弄完网址以后，往下面滑下来就可以看到定义参数这个关键词，下面的代码就是来填写我们对应的问卷星题目的答案和答题比例。</p><p><a class="simple-lightbox" href="https://oss.loveasd.com/loveasd-oss/2023/05/d2760e3b10b597d74839656eecdb4b68.png"><img   src="/images/loading.svg" data-src="https://oss.loveasd.com/loveasd-oss/2023/05/d2760e3b10b597d74839656eecdb4b68.png"  alt="图片" lazyload></a></p><p>参数解释：<strong>id</strong>代表题目的序号，<strong>type</strong>代表题目的列表，<strong>bili</strong>代表选项的比例。</p><p>比如：{id: 1, type: ‘单选’, bili: [30, 70]},</p><p>解释：问题1有两个选项，类型是单选，两个选项的比例分别是30%和70%，需要保持选项比例加起来是100%，**多选每个选项都可以100%**。</p><p>注意：每个符号要前后匹配上，还有最后的英文逗号不能缺失。</p><p>其他类型也是如此，如果是填空，则需要多加一个content代表填空内容，cotent有多少个则bili就要对应多少个。</p><p>比如：问题9是填空类型，分别有两个可选的内容是哈哈哈、嘿嘿嘿，然后比例设置50%、50%，代表这两个选项内容的比例。</p><p>设置好代码以后，按住Ctrl+S就可以保存代码啦！</p><p>返回问卷星页面，就可以开始愉快的自动化填写了。</p><h3 id="错误解决方案"><a href="#错误解决方案" class="headerlink" title="错误解决方案"></a>错误解决方案</h3><p>有朋友经过安装、补充代码以后发现可以自动填写问题，但是无法自动提交等问题，以下是我对一些错误问题的解决方法，如果你也遇到这个问题，可以尝试跟着搞搞。</p><ol><li><p>提交问卷的时候出现“点击按钮开始智能验证”提醒</p><p><a class="simple-lightbox" href="https://oss.loveasd.com/loveasd-oss/2023/05/8375a25250bf6eb36e850485c3c83649.png"><img   src="/images/loading.svg" data-src="https://oss.loveasd.com/loveasd-oss/2023/05/8375a25250bf6eb36e850485c3c83649.png"  alt="image-20230514132112925" lazyload></a></p><p>默认脚本是没有开启这个点击按钮的，在脚本编辑页面按Ctrl + F 搜索layui-layer-btn0，对应下面的代码修改。</p><p><a class="simple-lightbox" href="https://oss.loveasd.com/loveasd-oss/2023/05/f38a10e268be7c0299fdc365d1735b7c.png"><img   src="/images/loading.svg" data-src="https://oss.loveasd.com/loveasd-oss/2023/05/f38a10e268be7c0299fdc365d1735b7c.png"  alt="图片" lazyload></a></p><p>找到以后，对应增加下面的代码（注意不要放错位置）。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;SM_BTN_1&#x27;</span>).<span class="title function_">click</span>()</span><br><span class="line"><span class="comment">// 点击后会继续出现需要滑动滑块验证，所以7秒后会自动验证</span></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="title function_">slidingSlider</span>();</span><br><span class="line">&#125;,<span class="number">7000</span>)</span><br></pre></td></tr></table></figure><p>对照<br><a class="simple-lightbox" href="https://oss.loveasd.com/loveasd-oss/2023/05/fe40a83648d7f24885e1dbf62fe5c3bb.png"><img   src="/images/loading.svg" data-src="https://oss.loveasd.com/loveasd-oss/2023/05/fe40a83648d7f24885e1dbf62fe5c3bb.png"  alt="图片" lazyload></a></p><p>按住<strong>Ctrl+S</strong>可以保存代码。</p><p>如果脚本正常运行，流程应该是：开始-随机填写问卷-自动点击提交按钮-自动点击智能验证-等待7秒钟-自动验证滑块-结束。</p></li><li><p>出现“ 哎呀，出错了 ，点击刷新再来一次(error:n7f0e)”，错误</p><p><a class="simple-lightbox" href="https://oss.loveasd.com/loveasd-oss/2023/05/cdf789723da5826de92242c4226f616c.png"><img   src="/images/loading.svg" data-src="https://oss.loveasd.com/loveasd-oss/2023/05/cdf789723da5826de92242c4226f616c.png"  alt="image-20230514125304936" lazyload></a></p><p>在代码页面滑到最后，可以看到如下代码，根据下图提示来粘贴复制的代码。</p><p><a class="simple-lightbox" href="https://oss.loveasd.com/loveasd-oss/2023/05/8de20cce7be059236f2fd7b35dabfef7.png"><img   src="/images/loading.svg" data-src="https://oss.loveasd.com/loveasd-oss/2023/05/8de20cce7be059236f2fd7b35dabfef7.png"  alt="图片" lazyload></a></p><p>同样在脚本编辑页面按Ctrl + F 搜索 <strong>slidingSlider</strong>，把函数替换成下面这样子。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">   <span class="comment">// 出现哎呀出错啦，点击刷新再来一次错误 需要重新点击</span></span><br><span class="line">  <span class="keyword">var</span> nc_1_refresh1_reject = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;nc_1_refresh1&#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span>(nc_1_refresh1_reject!==<span class="string">&#x27;undefined&#x27;</span> || nc_1_refresh1_reject!==<span class="literal">null</span>)&#123;</span><br><span class="line">      nc_1_refresh1_reject.<span class="title function_">click</span>()</span><br><span class="line">      <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">           <span class="title function_">slidingSlider</span>()</span><br><span class="line">      &#125;,<span class="number">1000</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;,<span class="number">1000</span>)   </span><br></pre></td></tr></table></figure></li><li><p>出现”验证失败，请再次点击按钮刷新“错误</p><p>这时候需要关闭浏览器然后重新打开问卷，有条件的话更换一下ip。</p></li></ol><p><a class="simple-lightbox" href="https://oss.loveasd.com/loveasd-oss/2023/05/850c441e4a5b4f4fca9ef64572f7c0d5.png"><img   src="/images/loading.svg" data-src="https://oss.loveasd.com/loveasd-oss/2023/05/850c441e4a5b4f4fca9ef64572f7c0d5.png"  alt="image-20230514125413538" lazyload></a></p><h2 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h2><p>先说说这个脚本，真的很有用，以前还不懂的时候，经常是求好多人帮忙去填写这个问卷，甚至去花钱叫别人来刷。而且填写这个问卷也是一个任务而已，不需要质，只需要量。</p><p>后面了解了脚本技术以后，就尝试着使用脚本来解放双手等等，今天这个问卷星就用上啦！不过这些脚本都是别的大佬写的，我只是作为一个使用者。</p><p>如果你需要数据真实准确，我不建议你使用脚本，也不提倡你使用这个去盈利，脚本是用来学习和便捷我们生活的，不要做违法的事情哦！如果在尝试的过程中遇到问题，可以在后天私聊我，我看到会回复并给出解决方案。</p><p>今天就分享到这里，有什么推荐或者想要的<strong>软件</strong>&#x2F;<strong>网站</strong>&#x2F;<strong>资源</strong>，欢迎后台留言！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近在写一份调查问卷，用问卷星系统进行填写调查报告，不过这个调查数据也挺水的，只要份数够就行了，所以我就想到可以利用脚本来自动填写问卷。其实</summary>
      
    
    
    
    <category term="科技人生" scheme="https://www.loveasd.com/categories/%E7%A7%91%E6%8A%80%E4%BA%BA%E7%94%9F/"/>
    
    
    <category term="问卷星" scheme="https://www.loveasd.com/tags/%E9%97%AE%E5%8D%B7%E6%98%9F/"/>
    
    <category term="油猴脚本" scheme="https://www.loveasd.com/tags/%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>RabbitMq 点击Exchanges出现Management API returned status code 500错误解决方法</title>
    <link href="https://www.loveasd.com/p/352b77f0.html"/>
    <id>https://www.loveasd.com/p/352b77f0.html</id>
    <published>2023-05-12T08:00:00.000Z</published>
    <updated>2024-04-18T10:19:57.599Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近项目部署RabbitMQ中间件，使用DEV服务器安装的mq在图形化界面点击Exchanges交换机的时候出现</p><p><strong>“Management API returned status code 500 -”</strong> 的错误，对于已经很久没玩mq的我有点懵逼。</p><p>搜索了一圈，发现新的版本好像默认会关闭UI数据分析可视化查询，然后进去容器里面追加一个配置重启就可以了。</p><p><a class="simple-lightbox" href="https://oss.loveasd.com/loveasd-oss/2023/05/ed9e8138ce38015f283eafee2a42d870.png"><img   src="/images/loading.svg" data-src="https://oss.loveasd.com/loveasd-oss/2023/05/ed9e8138ce38015f283eafee2a42d870.png"  alt="image-20230512160550506" lazyload></a></p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p>首先进入自己的mq容器</p><p><strong>docker exec -it rabbitmq &#x2F;bin&#x2F;bash</strong></p><p>进入到容器以后cd到这个目录，**&#x2F;etc&#x2F;rabbitmq&#x2F;conf.d&#x2F;**</p><p>然后执行这个命令， <strong>echo management_agent.disable_metrics_collector &#x3D; false &gt; management_agent.disable_metrics_collector.conf</strong></p><p>重启你的mq容器  <strong>docker restart rabbitmq</strong></p><p>然后就可以啦！</p><p><a class="simple-lightbox" href="https://oss.loveasd.com/loveasd-oss/2023/05/cdd2aed309e1026a89085eeeaeb3e5c7.png"><img   src="/images/loading.svg" data-src="https://oss.loveasd.com/loveasd-oss/2023/05/cdd2aed309e1026a89085eeeaeb3e5c7.png"  alt="image-20230512160654922" lazyload></a></p><h2 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h2><p>rabbitMq好久没接触过，都忘了怎么玩了，有时间重新学习一下！写这个文章是为了作一下记录，避免以后遇到同样的问题。</p><p>而且其实我还有疑问的，为什么我线上部署的版本不用关闭这个也不会出现这样子的错误呢？有时间研究…</p><p>借鉴</p><ul><li><a href="https://blog.csdn.net/aiwangtingyun/article/details/109778815">【RabbitMQ】之解决后台管理页面 Channels 报错提示</a></li><li><a href="https://zhuanlan.zhihu.com/p/523562639">RabbitMQ在Docker中安装以及Management API returned status code 500错误)</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近项目部署RabbitMQ中间件，使用DEV服务器安装的mq在图形化界面点击Exchanges交换机的时候出现&lt;/p&gt;
&lt;p&gt;&lt;stron</summary>
      
    
    
    
    <category term="开发日志" scheme="https://www.loveasd.com/categories/%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/"/>
    
    
    <category term="RabbitMQ" scheme="https://www.loveasd.com/tags/RabbitMQ/"/>
    
  </entry>
  
  <entry>
    <title>记录一次线上服务事故</title>
    <link href="https://www.loveasd.com/p/c5eeaec6.html"/>
    <id>https://www.loveasd.com/p/c5eeaec6.html</id>
    <published>2023-05-12T06:20:00.000Z</published>
    <updated>2024-04-18T10:19:57.595Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近两天某个项目的认定模块总是出现问题，好几个老师群里反馈，后面小组成员排查了一下发现是Redis key过期回调没有触发。</p><p>先说一下我们这个服务的逻辑，当某个活动被启用时，会自动创建一个缓存，ttl为现在时间距离活动开始时间的长度，然后当key过期时，会自动触发RedisKeyExpirationListener 里面的onMessage，然后再去实现具体的业务。</p><p>一直以来Prod和Dev一直是可以正常使用的，然后最近才出现这个问题。</p><p>一开始以为是某些活动没有触发到，今天仔细一看是所有都没有触发出来！！</p><p>于是我们就慌了，后面看了一下发现是Redis的某个配置没有开启，就是这个：notify-keyspace-events Ex。</p><p>但是又很奇怪，为什么之前一直可以？最近才会出现这个问题呢？（等大佬解答</p><p><a class="simple-lightbox" href="https://oss.loveasd.com/loveasd-oss/2023/05/0838fa7a66ce044789e3892943feda68.png"><img   src="/images/loading.svg" data-src="https://oss.loveasd.com/loveasd-oss/2023/05/0838fa7a66ce044789e3892943feda68.png"  alt="image-20230512141438468" lazyload></a></p><p>上图，默认是没有开启这个回调事件的。</p><p>于是暂停了SpringBoot服务，然后重新配置了一下Redis，再一顿重启，终于搞定。（图示是我另外一个也是用到这个的模块</p><p><a class="simple-lightbox" href="https://oss.loveasd.com/loveasd-oss/2023/05/102974fc5a439e5c2d7e8f5d868840ba.png"><img   src="/images/loading.svg" data-src="https://oss.loveasd.com/loveasd-oss/2023/05/102974fc5a439e5c2d7e8f5d868840ba.png"  alt="image-20230512141700544" lazyload></a></p><p><a class="simple-lightbox" href="https://oss.loveasd.com/loveasd-oss/2023/05/11c404e093a5ed6aada3bd1d56293851.png"><img   src="/images/loading.svg" data-src="https://oss.loveasd.com/loveasd-oss/2023/05/11c404e093a5ed6aada3bd1d56293851.png"  alt="image-20230512141753674" lazyload></a></p><p>太多坑了，有个小伙伴提转MQ异步消费，感觉更稳定！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近两天某个项目的认定模块总是出现问题，好几个老师群里反馈，后面小组成员排查了一下发现是Redis key过期回调没有触发。&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="翻车日志" scheme="https://www.loveasd.com/categories/%E7%BF%BB%E8%BD%A6%E6%97%A5%E5%BF%97/"/>
    
    
    <category term="Docker" scheme="https://www.loveasd.com/tags/Docker/"/>
    
    <category term="Redis" scheme="https://www.loveasd.com/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>博客使用B2+CF作为图床</title>
    <link href="https://www.loveasd.com/p/40faba9d.html"/>
    <id>https://www.loveasd.com/p/40faba9d.html</id>
    <published>2023-05-12T05:53:00.000Z</published>
    <updated>2024-04-18T10:19:57.599Z</updated>
    
    <content type="html"><![CDATA[<p>最近博客转为hexo搭建啦，完全静态博客！但是这个图片存储着实让我头疼。</p><p>在14年的适合，陆陆续续使用过又拍云和七牛云。</p><p>然后七牛那时候还是有临时链接的，只是用着用着突然就没办法用要绑定自己的域名，</p><p>刚好那时候是在运营vpao.net，然后就绑定了上去，一直到高一，就没怎么管博客了。</p><p>等高考结束后，我才发现我的vpao.net被污染了，这让我很想不通，我又不是什么违规站点，</p><p>一直到现在，都是处于污染状态，域名我可是从17年续费到24年啊！</p><p>说远了，虽然现在七牛还有容量，但是没有备案域名也绑定不了。</p><p>昨天一直在找存储方案，发现好像可以使用Backblaze进行存储，有免费10GB容量，可通过CloudFlare自定义域名。</p><p>虽然对亚太地区不太友好，等有钱了就换国内OSS！</p><p>找了一圈，跟着一位大佬部署了一下，完美搞定~</p><p>有需要的可以看，<a href="https://blog.ostdb.info/54300/">使用PicGo+CF(Cloudflare)+B2(Backblaze)作为博客图床 </a></p><p>顺便说一下博客介绍，一切都是白嫖的</p><ul><li>域名，工作室某个师姐友情赠送</li><li>博客运行在Vercael</li><li>代码存储在Github</li><li>评论使用MongoDB免费版存储</li><li>图片存储使用Backblaze + CloudFlare</li><li>写作使用免费版typora + picgo </li><li>暂无其他说明</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近博客转为hexo搭建啦，完全静态博客！但是这个图片存储着实让我头疼。&lt;/p&gt;
&lt;p&gt;在14年的适合，陆陆续续使用过又拍云和七牛云。&lt;/p&gt;
&lt;p&gt;然后七牛那时候还是有临时链接的，只是用着用着突然就没办法用要绑定自己的域名，&lt;/p&gt;
&lt;p&gt;刚好那时候是在运营vpao.ne</summary>
      
    
    
    
    <category term="博客日志" scheme="https://www.loveasd.com/categories/%E5%8D%9A%E5%AE%A2%E6%97%A5%E5%BF%97/"/>
    
    
    <category term="Backblaze" scheme="https://www.loveasd.com/tags/Backblaze/"/>
    
    <category term="CloudFlare" scheme="https://www.loveasd.com/tags/CloudFlare/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="https://www.loveasd.com/p/d87f7e0c.html"/>
    <id>https://www.loveasd.com/p/d87f7e0c.html</id>
    <published>2023-05-10T10:28:45.000Z</published>
    <updated>2024-04-18T10:19:57.627Z</updated>
    
    
    
    
    
  </entry>
  
</feed>
